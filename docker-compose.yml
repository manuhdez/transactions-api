services:
  accounts:
    build:
      context: docker/app
    working_dir: /internal/accounts
    volumes:
      - ./internal:/internal
      - ./shared:/shared
    env_file:
      - internal/accounts/.env
      - .env
    environment:
      APP_PORT: "8081"
    ports:
      - "8081:8081"
    restart: always
    depends_on:
      - rabbit
      - database

  transactions:
    build:
      context: docker/app
    working_dir: /internal/transactions
    volumes:
      - ./internal:/internal
      - ./shared:/shared
    env_file:
      - internal/transactions/.env
      - .env
    environment:
      APP_PORT: "8082"
    ports:
      - "8082:8082"
    restart: always
    depends_on:
      - rabbit
      - database

  users:
    build:
      context: docker/app
    working_dir: /internal/users
    volumes:
      - ./internal:/internal
      - ./shared:/shared
    env_file:
      - internal/users/.env
      - .env
    environment:
      APP_PORT: "8083"
    ports:
      - "8083:8083"
    restart: always
    depends_on:
      - rabbit
      - database

  database:
    image: postgres:14-alpine
    env_file:
      - .env
    shm_size: 128mb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  rabbit:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbit_data:/var/lib/rabbitmq
      - rabbit_logs:/var/log/rabbitmq
    restart: unless-stopped

  api_gateway:
    image: kong:3.0-alpine
    volumes:
      - ./kong.yml:/usr/local/kong/declarative/kong.yml
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_DECLARATIVE_CONFIG: "/usr/local/kong/declarative/kong.yml"

  prometheus:
    image: prom/prometheus:v3.0.0-beta.1
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./var/prometheus/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.3.0
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "grafana"
    ports:
      - "3000:3000"
    volumes:
      - ./var/grafana/grafana_data:/var/lib/grafana
      - ./var/grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped

volumes:
  db_data:
  rabbit_data:
  rabbit_logs:
