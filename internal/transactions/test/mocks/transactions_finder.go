// Code generated by mockery v2.47.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	transaction "github.com/manuhdez/transactions-api/internal/transactions/domain/transaction"
)

// AllTransactionsFinder is an autogenerated mock type for the AllTransactionsFinder type
type AllTransactionsFinder struct {
	mock.Mock
}

// Invoke provides a mock function with given fields: _a0
func (_m *AllTransactionsFinder) Invoke(_a0 context.Context) ([]transaction.Transaction, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Invoke")
	}

	var r0 []transaction.Transaction
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) ([]transaction.Transaction, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(context.Context) []transaction.Transaction); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]transaction.Transaction)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAllTransactionsFinder creates a new instance of AllTransactionsFinder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAllTransactionsFinder(t interface {
	mock.TestingT
	Cleanup(func())
}) *AllTransactionsFinder {
	mock := &AllTransactionsFinder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
